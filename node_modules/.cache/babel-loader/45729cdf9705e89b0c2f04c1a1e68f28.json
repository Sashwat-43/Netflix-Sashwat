{"ast":null,"code":"var _jsxFileName = \"/Users/sashwatmishra/Desktop/webd/netflix_clone_sashwat/src/Row.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Row.css';\nimport axios from './axios';\nimport Youtube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row({\n  title,\n  fetchURL\n}) {\n  _s();\n\n  const [movies, SetMovies] = useState([]);\n  const [ytURL, SetUrl] = useState(\"\");\n  const baseURL = \"https://image.tmdb.org/t/p/original/\";\n\n  const ShowTrailer = movie => {\n    if (ytURL) {\n      SetUrl(\"\");\n    } else {\n      movieTrailer((movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.original_name) || \"\").then(url => {\n        const urlParams = new URLSearchParams(new URL(url).search);\n        SetUrl(urlParams.get('v'));\n      }).catch(() => {\n        console.log(\"Currently unavailable\");\n      });\n    }\n  };\n\n  const opts = {\n    height: \"400px\",\n    width: \"100%\",\n    playerVar: {\n      autoplay: \"1\"\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      SetMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchURL]);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rows\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"poster\",\n        onClick: () => ShowTrailer(movie),\n        src: `${baseURL}${movie.poster_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), ytURL && /*#__PURE__*/_jsxDEV(Youtube, {\n      videoId: ytURL,\n      opts: opts,\n      style: {\n        transition: \"0.3s all ease-in\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"GQcgB/xneuZ+kQKLBkE7WEgYR3A=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/sashwatmishra/Desktop/webd/netflix_clone_sashwat/src/Row.jsx"],"names":["React","useState","useEffect","axios","Youtube","movieTrailer","Row","title","fetchURL","movies","SetMovies","ytURL","SetUrl","baseURL","ShowTrailer","movie","name","original_name","then","url","urlParams","URLSearchParams","URL","search","get","catch","console","log","opts","height","width","playerVar","autoplay","fetchData","request","data","results","map","poster_path","id","transition"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,eAAzB;;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAb,EAA+B;AAAA;;AAE3B,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBT,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACU,KAAD,EAAOC,MAAP,IAAiBX,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAMY,OAAO,GAAG,sCAAhB;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAU;AAC1B,QAAGJ,KAAH,EACA;AACIC,MAAAA,MAAM,CAAC,EAAD,CAAN;AACH,KAHD,MAKA;AACIP,MAAAA,YAAY,CAAC,CAAAU,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,MAAaD,KAAb,aAAaA,KAAb,uBAAaA,KAAK,CAAER,KAApB,MAA2BQ,KAA3B,aAA2BA,KAA3B,uBAA2BA,KAAK,CAAEE,aAAlC,KAAiD,EAAlD,CAAZ,CAAkEC,IAAlE,CAAyEC,GAAD,IAAQ;AAC5E,cAAMC,SAAS,GAAG,IAAIC,eAAJ,CAAoB,IAAIC,GAAJ,CAAQH,GAAR,EAAaI,MAAjC,CAAlB;AACAX,QAAAA,MAAM,CAACQ,SAAS,CAACI,GAAV,CAAc,GAAd,CAAD,CAAN;AACH,OAHD,EAGGC,KAHH,CAGU,MAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH,OALD;AAMH;AACJ,GAdD;;AAgBA,QAAMC,IAAI,GAAC;AACPC,IAAAA,MAAM,EAAE,OADD;AAEPC,IAAAA,KAAK,EAAE,MAFA;AAGPC,IAAAA,SAAS,EAAC;AACNC,MAAAA,QAAQ,EAAE;AADJ;AAHH,GAAX;AAQA9B,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAe+B,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAG,MAAM/B,KAAK,CAACqB,GAAN,CAAUhB,QAAV,CAAtB;AACAE,MAAAA,SAAS,CAACwB,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOF,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GAPQ,EAON,CAACzB,QAAD,CAPM,CAAT;AASAkB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAA,gBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACKE,MAAM,CAAC4B,GAAP,CAAatB,KAAD,iBACT;AAAK,QAAA,SAAS,EAAE,QAAhB;AACA,QAAA,OAAO,EAAK,MAAMD,WAAW,CAACC,KAAD,CAD7B;AAGA,QAAA,GAAG,EAAG,GAAEF,OAAQ,GAAEE,KAAK,CAACuB,WAAY,EAHpC;AAIA,QAAA,GAAG,EAAEvB,KAAK,CAACC;AAJX,SAEKD,KAAK,CAACwB,EAFX;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,EAWK5B,KAAK,iBAAI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEA,KAAlB;AAAyB,MAAA,IAAI,EAAEiB,IAA/B;AAAqC,MAAA,KAAK,EAAE;AAACY,QAAAA,UAAU,EAAE;AAAb;AAA5C;AAAA;AAAA;AAAA;AAAA,YAXd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAvDQlC,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport './Row.css';\nimport axios from './axios';\nimport Youtube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nfunction Row({title,fetchURL}) {\n\n    const [movies,SetMovies] = useState([]);\n    const [ytURL,SetUrl] = useState(\"\");\n    const baseURL = \"https://image.tmdb.org/t/p/original/\";\n\n    const ShowTrailer = (movie) =>{\n        if(ytURL)\n        {\n            SetUrl(\"\");\n        }\n        else\n        {\n            movieTrailer(movie?.name||movie?.title||movie?.original_name||\"\").then( (url) =>{\n                const urlParams = new URLSearchParams(new URL(url).search)\n                SetUrl(urlParams.get('v'));\n            }).catch( ()=>{\n                console.log(\"Currently unavailable\");\n            })\n        }\n    }\n\n    const opts={\n        height: \"400px\",\n        width: \"100%\",\n        playerVar:{\n            autoplay: \"1\"\n        }\n    }\n\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(fetchURL);\n            SetMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchURL]);\n\n    console.log(movies);\n    return (\n        <div className=\"rows\">\n            <h2>{title}</h2>\n            <div className=\"row\">\n                {movies.map( (movie) => (\n                    <img className={\"poster\"}\n                    onClick = { () => ShowTrailer(movie)}\n                    key={movie.id}\n                    src={`${baseURL}${movie.poster_path}`}\n                    alt={movie.name} />\n                ))}\n            </div>\n            {ytURL && <Youtube videoId={ytURL} opts={opts} style={{transition: \"0.3s all ease-in\"}}/>}\n        </div>\n    )\n}\n\nexport default Row\n"]},"metadata":{},"sourceType":"module"}