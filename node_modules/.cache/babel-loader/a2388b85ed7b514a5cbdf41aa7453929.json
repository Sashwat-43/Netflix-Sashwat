{"ast":null,"code":"var _jsxFileName = \"/Users/sashwatmishra/Desktop/webd/netflix_clone_sashwat/src/Banner.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Banner.css';\nimport axios from './axios';\nimport requests from './Request_fetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Banner() {\n  _s();\n\n  const types = [requests.NetflixOriginals, requests.Trending, requests.TopRated, requests.ActionMovies, requests.AdventureMovies, requests.HorrorMovies, requests.ComedyMovies, requests.AnimationMovies, requests.ThrillerMovies];\n  const [movie, SetMovie] = useState([]);\n  useEffect(() => {\n    async function fetchMovie() {\n      const movie_set = types[Math.random() * 9];\n      const request = await axios.get(movie_set);\n      console.log(request);\n      const movieToBeSet = request.data.results[Math.floor(Math.random() * request.data.results.length - 1)];\n      SetMovie(movieToBeSet);\n      return request;\n    }\n\n    fetchMovie();\n  }, []);\n  console.log(movie);\n\n  const truncate_description = (str, n) => {\n    if (str && str.length > n) return str.substr(0, n) + '...';else return str;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"banner\",\n    style: {\n      backgroundSize: \"cover\",\n      backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}\")`,\n      backgroundPosition: \"center 0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.original_name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          children: \"My List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"description\",\n        children: truncate_description(movie === null || movie === void 0 ? void 0 : movie.overview, 200)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Banner, \"PQ8basWe+7PBIlib9piRNAPNdXY=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/Users/sashwatmishra/Desktop/webd/netflix_clone_sashwat/src/Banner.jsx"],"names":["React","useState","useEffect","axios","requests","Banner","types","NetflixOriginals","Trending","TopRated","ActionMovies","AdventureMovies","HorrorMovies","ComedyMovies","AnimationMovies","ThrillerMovies","movie","SetMovie","fetchMovie","movie_set","Math","random","request","get","console","log","movieToBeSet","data","results","floor","length","truncate_description","str","n","substr","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","name","title","original_name","overview"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;;AAGA,SAASC,MAAT,GAAkB;AAAA;;AAEd,QAAMC,KAAK,GAAC,CAACF,QAAQ,CAACG,gBAAV,EAA2BH,QAAQ,CAACI,QAApC,EAA6CJ,QAAQ,CAACK,QAAtD,EAA+DL,QAAQ,CAACM,YAAxE,EAAqFN,QAAQ,CAACO,eAA9F,EAA8GP,QAAQ,CAACQ,YAAvH,EAAoIR,QAAQ,CAACS,YAA7I,EAA0JT,QAAQ,CAACU,eAAnK,EAAmLV,QAAQ,CAACW,cAA5L,CAAZ;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBhB,QAAQ,CAAC,EAAD,CAAjC;AAEAC,EAAAA,SAAS,CAAE,MAAK;AACZ,mBAAegB,UAAf,GAA2B;AACvB,YAAMC,SAAS,GAAGb,KAAK,CAACc,IAAI,CAACC,MAAL,KAAc,CAAf,CAAvB;AACA,YAAMC,OAAO,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAUJ,SAAV,CAAtB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,YAAMI,YAAY,GAAGJ,OAAO,CAACK,IAAR,CAAaC,OAAb,CAAqBR,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACC,MAAL,KAAcC,OAAO,CAACK,IAAR,CAAaC,OAAb,CAAqBE,MAAnC,GAA4C,CAAvD,CAArB,CAArB;AACAb,MAAAA,QAAQ,CAACS,YAAD,CAAR;AACJ,aAAOJ,OAAP;AACC;;AACDJ,IAAAA,UAAU;AACb,GAVQ,EAUP,EAVO,CAAT;AAWAM,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;;AAEA,QAAMe,oBAAoB,GAAG,CAACC,GAAD,EAAKC,CAAL,KAAW;AACpC,QAAGD,GAAG,IAAIA,GAAG,CAACF,MAAJ,GAAWG,CAArB,EACI,OAAOD,GAAG,CAACE,MAAJ,CAAW,CAAX,EAAaD,CAAb,IAAgB,KAAvB,CADJ,KAGI,OAAOD,GAAP;AACP,GALD;;AAMA,sBACI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAC9BG,MAAAA,cAAc,EAAE,OADc;AAE9BC,MAAAA,eAAe,EAAG,4CAA2CpB,KAA5C,aAA4CA,KAA5C,uBAA4CA,KAAK,CAAEqB,aAAc,IAFpD;AAG9BC,MAAAA,kBAAkB,EAAE;AAHU,KAAlC;AAAA,4BAKA;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,kBAAuB,CAAAtB,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEuB,IAAP,MAAavB,KAAb,aAAaA,KAAb,uBAAaA,KAAK,CAAEwB,KAApB,MAA2BxB,KAA3B,aAA2BA,KAA3B,uBAA2BA,KAAK,CAAEyB,aAAlC;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBACKV,oBAAoB,CAACf,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAE0B,QAAR,EAAiB,GAAjB;AADzB;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,eAeI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;;GA7CQrC,M;;KAAAA,M;AA+CT,eAAeA,MAAf","sourcesContent":["import React,{ useState,useEffect } from 'react'\nimport './Banner.css'\nimport axios from './axios';\nimport requests from './Request_fetch';\n\n\nfunction Banner() {\n    \n    const types=[requests.NetflixOriginals,requests.Trending,requests.TopRated,requests.ActionMovies,requests.AdventureMovies,requests.HorrorMovies,requests.ComedyMovies,requests.AnimationMovies,requests.ThrillerMovies];\n    const [movie,SetMovie] = useState([]);\n\n    useEffect( () =>{\n        async function fetchMovie(){\n            const movie_set = types[Math.random()*9];\n            const request = await axios.get(movie_set);\n            console.log(request);\n            const movieToBeSet = request.data.results[Math.floor(Math.random()*request.data.results.length - 1)];\n            SetMovie(movieToBeSet);\n        return request;\n        }\n        fetchMovie();\n    },[])\n    console.log(movie);\n\n    const truncate_description = (str,n) => {\n        if(str && str.length>n)\n            return str.substr(0,n)+'...';\n        else\n            return str;\n    }\n    return (\n        <header className=\"banner\" style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition: \"center 0\",\n        }}>\n        <div className=\"content\">\n            <h1 className=\"title\">{movie?.name||movie?.title||movie?.original_name}</h1>\n            <div className=\"buttons\">\n                <button className=\"button\">Play</button>\n                <button className=\"button\">My List</button>\n            </div>\n            <h1 className=\"description\">\n                {truncate_description(movie?.overview,200)}\n            </h1>\n        </div>\n            <div className=\"fade\">\n\n            </div>\n        </header>\n    )\n}\n\nexport default Banner\n"]},"metadata":{},"sourceType":"module"}