{"version":3,"sources":["Firebase.jsx","features/userSlice.js","Navbar.jsx","axios.js","Request_fetch.jsx","Banner.jsx","Row.jsx","Profiles/HomePage.jsx","Profiles/SignUp.jsx","Profiles/Login.jsx","Profiles/Error.jsx","Profiles/MyProfile.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Navbar","useState","scroll","setScroll","history","useHistory","scrollNavbar","window","scrollY","useEffect","addEventListener","removeEventListener","className","src","alt","onClick","push","instance","axios","create","baseURL","API_KEY","requests","Trending","NetflixOriginals","TopRated","ActionMovies","AdventureMovies","HorrorMovies","ComedyMovies","AnimationMovies","ThrillerMovies","Banner","str","n","movie","SetMovie","a","get","request","console","log","movieToBeSet","data","results","Math","floor","random","length","fetchMovie","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","original_name","overview","substr","Row","fetchURL","movies","SetMovies","ytURL","SetUrl","fetchData","map","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","ShowTrailer","poster_path","id","videoId","opts","height","width","playerVars","autoplay","HomePage","Poster","SignUp","email","useRef","password","ref","type","placeholder","event","preventDefault","signInWithEmailAndPassword","current","value","error","alert","createUserWithEmailAndPassword","User","message","Login","signIn","SetsignIn","Error","MyProfile","useSelector","signOut","App","dispatch","useDispatch","onAuthStateChanged","uid","exact","path","store","configureStore","reducer","userReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56b40f97.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst Config = {\n    apiKey: \"AIzaSyDgRD3YX_Pm7FF5pz_Rz_Sgua0Tn-umTRo\",\n    authDomain: \"netflix-clone-306f2.firebaseapp.com\",\n    projectId: \"netflix-clone-306f2\",\n    storageBucket: \"netflix-clone-306f2.appspot.com\",\n    messagingSenderId: \"204457001587\",\n    appId: \"1:204457001587:web:7080a5811fcb511ba96006\",\n    measurementId: \"G-C2BB6W33EJ\"\n  };\n\n  const firebaseApp = firebase.initializeApp(Config);\n  const db = firebaseApp.firestore();\n  const auth = firebase.auth();\n\n  export { db,auth };","import { createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counter/counterAPI';\n\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null\n  },\n  reducers: {\n    login: (state,action) => {\n      state.user = action.payload;\n    },\n    logout:  (state) =>{\n      state.user = null;\n    }\n  }\n});\n\nexport const { login,logout } = userSlice.actions;\n\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import React,{ useState,useEffect } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport './Navbar.css';\n\n\nfunction Navbar() {\n\n    const [scroll,setScroll] = useState(false);\n    const history = useHistory();\n    const scrollNavbar = () =>{\n        if(window.scrollY > 100)\n        {\n            setScroll(true);\n        }\n        else\n        {\n            setScroll(false);\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\",scrollNavbar);\n        return () => {\n            window.removeEventListener(\"scroll\",scrollNavbar);\n        }\n    }, [])\n\n    return (\n        <div className={`nav ${scroll && \"nav_black\"}`}>\n            <div className=\"image_bar\">\n                <img className=\"logo\" \n                    src=\"https://1000logos.net/wp-content/uploads/2017/05/Netflix-Logo.png\"\n                    alt=\"logo\"\n                    onClick={ () => {history.push('/')}}\n                    />\n                <img className=\"avatar\" \n                    src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n                    alt=\"avatar\"\n                    onClick={ () => {history.push('/profile')}}\n                    />\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL : \"https://api.themoviedb.org/3/\"\n})\n\nexport default instance;","const API_KEY = \"af511712f362327f96565bc09abad684\";\n\nconst requests = {\n    Trending: `trending/all/week?api_key=${API_KEY}&language=en-US`,\n    NetflixOriginals: `discover/tv?api_key=${API_KEY}&with_networks=213`,\n    TopRated: `movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    ActionMovies: `discover/movie?api_key=${API_KEY}&with_genres=28&language=en-US`,\n    AdventureMovies:`discover/movie?api_key=${API_KEY}&with_genres=12&language=en-US`,\n    HorrorMovies:`discover/movie?api_key=${API_KEY}&with_genres=27&language=en-US`,\n    ComedyMovies:`discover/movie?api_key=${API_KEY}&with_genres=35&language=en-US`,\n    AnimationMovies:`discover/movie?api_key=${API_KEY}&with_genres=16&language=en-US`,\n    ThrillerMovies:`discover/movie?api_key=${API_KEY}&with_genres=53&language=en-US`\n};\n\nexport default requests;","import React,{ useState,useEffect } from 'react'\nimport './Banner.css'\nimport axios from './axios';\nimport requests from './Request_fetch';\n\n\nfunction Banner() {\n    \n    const [movie,SetMovie] = useState([]);\n\n    useEffect( () =>{\n        async function fetchMovie(){\n            const request = await axios.get(requests.NetflixOriginals);\n            console.log(request);\n            const movieToBeSet = request.data.results[Math.floor(Math.random()*request.data.results.length - 1)];\n            SetMovie(movieToBeSet);\n        return request;\n        }\n        fetchMovie();\n    },[])\n    console.log(movie);\n\n    const truncate_description = (str,n) => {\n        if(str && str.length>n)\n            return str.substr(0,n)+'...';\n        else\n            return str;\n    }\n    return (\n        <header className=\"banner\" style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n            backgroundPosition: \"center 0\",\n        }}>\n        <div className=\"content\">\n            <h1 className=\"title\">{movie?.name||movie?.title||movie?.original_name}</h1>\n            <div className=\"buttons\">\n                <button className=\"button\">Play</button>\n                <button className=\"button\">My List</button>\n            </div>\n            <h1 className=\"description\">\n                {truncate_description(movie?.overview,200)}\n            </h1>\n        </div>\n            <div className=\"fade\">\n\n            </div>\n        </header>\n    )\n}\n\nexport default Banner\n","import React,{useState,useEffect} from 'react'\nimport './Row.css';\nimport axios from './axios';\nimport Youtube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nfunction Row({title,fetchURL}) {\n\n    const [movies,SetMovies] = useState([]);\n    const [ytURL,SetUrl] = useState(\"\");\n    const baseURL = \"https://image.tmdb.org/t/p/original/\";\n\n    const ShowTrailer = (movie) =>{\n        if(ytURL)\n        {\n            SetUrl(\"\");\n        }\n        else\n        {\n            movieTrailer(movie?.name||movie?.title||movie?.original_name||\"\").then( (url) =>{\n                const urlParams = new URLSearchParams(new URL(url).search)\n                SetUrl(urlParams.get('v'));\n            }).catch( ()=>{\n                console.log(\"Currently unavailable\");\n            })\n        }\n    }\n\n    const opts={\n        height: \"400px\",\n        width: \"100%\",\n        playerVars:{\n            autoplay: 1\n        }\n    };\n\n    useEffect(() => {\n        async function fetchData(){\n            const request = await axios.get(fetchURL);\n            SetMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    }, [fetchURL]);\n\n    console.log(movies);\n    return (\n        <div className=\"rows\">\n            <h2>{title}</h2>\n            <div className=\"row\">\n                {movies.map( (movie) => (\n                    <img className={\"poster\"}\n                    onClick = { () => ShowTrailer(movie)}\n                    key={movie.id}\n                    src={`${baseURL}${movie.poster_path}`}\n                    alt={movie.name} />\n                ))}\n            </div>\n            {ytURL && <Youtube videoId={ytURL} opts={opts}/>}\n        </div>\n    )\n}\n\nexport default Row\n","import React from 'react';\nimport Navbar from '../Navbar';\nimport Banner from '../Banner';\nimport requests from '../Request_fetch';\nimport Row from '../Row.jsx';\nimport './HomePage.css'\n\nfunction HomePage() {\n    return (\n        <div className=\"home\">\n            <Navbar />\n            <Banner />\n            <Row title=\"NETFLIX ORIGINALS\" fetchURL ={requests.NetflixOriginals}/>\n            <Row title=\"TRENDING\" fetchURL ={requests.Trending}/>\n            <Row title=\"ACTION MOVIES\" fetchURL ={requests.ActionMovies}/>\n            <Row title=\"HORROR MOVIES\" fetchURL ={requests.HorrorMovies}/>\n            <Row title=\"ADVENTURE MOVIES\" fetchURL ={requests.AdventureMovies}/>\n            <Row title=\"COMEDY MOVIES\" fetchURL ={requests.ComedyMovies}/>\n            <Row title=\"TOP RATED MOVIES\" fetchURL ={requests.TopRated} Poster/>\n            <Row title=\"THRILLER MOVIES\" fetchURL ={requests.ThrillerMovies}/>\n            <Row title=\"ANIMATION MOVIES\" fetchURL ={requests.AnimationMovies}/>\n        </div>\n    )\n}\n\nexport default HomePage;\n","import React,{ useRef } from 'react'\nimport './SignUp.css';\nimport { auth } from '../Firebase';\n\nfunction SignUp() {\n\n    const email = useRef(null);\n    const password = useRef(null);\n\n    const registerSubmit = (event) =>{\n        event.preventDefault();\n        auth.createUserWithEmailAndPassword(\n            email.current.value,\n            password.current.value\n        ).then( (User) =>{\n            console.log(User);\n        }).catch( (error) =>{\n            alert(error.message);\n        });\n    }\n\n    const signinSubmit = (event) =>{\n        event.preventDefault();\n        auth.signInWithEmailAndPassword(\n            email.current.value,\n            password.current.value\n        ).then( (user) => {\n            console.log(user);\n        }).catch( (error) =>{\n            alert(\"No User Exists with these credentials\");\n        });\n    }\n    return (\n        <div className=\"signup\">\n            <form>\n                <h1>Sign In</h1>\n                <input ref={email} type=\"email\" placeholder=\"Email Address\" />\n                <input ref={password} type=\"password\" placeholder=\"Password\"/>\n                <button type=\"submit\" onClick={ signinSubmit }>\n                    Sign In\n                </button>\n                <h3><span className=\"grey\">New to Netflix?</span>\n                <span className=\"link\"  onClick={ registerSubmit }>Sign up now.</span> </h3>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUp\n","import React,{ useState } from 'react';\nimport './Login.css';\nimport SignUp from './SignUp';\n\nfunction Login() {\n\n    const [signIn,SetsignIn] = useState(false);\n    return (\n        <div className=\"login\">\n            <div className=\"login_background\">\n                <img className=\"logo\"\n                src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"\n                alt=\"Netflix\"/>\n                <button className=\"login_button\" onClick={ () => SetsignIn(true)}>\n                    Sign In\n                </button>\n                <div className=\"login_gradient\">\n                </div>\n                <div className=\"login_body\">\n                    {signIn ? <SignUp/> \n                    :\n                        <>\n                            <h1>Unlimited movies, TV shows and more.</h1>\n                            <h2>Watch anywhere. Cancel anytime.</h2>\n                            <h3>Ready to watch? Enter your email to create or restart your membership.</h3>\n                            <div className=\"login_input\">\n                            <form>\n                                <input type=\"email\" placeholder=\"Email Address\"/>\n                                <button className=\"login_button_input\" onClick={ () => SetsignIn(true)}>Get Started</button>\n                            </form>\n                            </div>\n                        </>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React from 'react'\nimport './Error.css';\n\nfunction Error() {\n    return (\n        <div className=\"error\">\n            <h1>Error 404 : page found</h1>\n        </div>\n    )\n}\n\nexport default Error\n","import React from 'react'\nimport './MyProfile.css';\nimport Navbar from '../Navbar';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../features/userSlice';\nimport { auth } from '../Firebase';\n\nfunction MyProfile() {\n\n    const user = useSelector(selectUser);\n\n    return (\n        <div className=\"myprofile\">\n            <Navbar/>\n            <div className=\"myprofile_body\">\n                <h1>Edit Profile</h1>\n                <div className=\"myprofile_info\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n                        alt=\"Myprofile\" \n                    />\n                    <div className=\"myprofile_details\">\n                        <h2>{user.email}</h2>\n                        <div className=\"plans\">\n                            <h3>Plans</h3>\n                            <button className=\"myprofile_signout\"\n                                onClick={ () =>{ auth.signOut() }}\n                                >\n                            SIGN OUT</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MyProfile\n","import React,{ useEffect } from 'react';\nimport { BrowserRouter as Router,Switch,Route } from \"react-router-dom\";\nimport './App.css';\nimport { auth } from './Firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout,login, selectUser } from './features/userSlice';\nimport HomePage from './Profiles/HomePage';\nimport Login from './Profiles/Login';\nimport Error from './Profiles/Error';\nimport MyProfile from './Profiles/MyProfile';\n\nfunction App() {\n  const user=useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() =>{\n    return auth.onAuthStateChanged( (User) =>{\n      if(User)\n      {\n        dispatch(login({\n          uid: User.uid,\n          email: User.email\n        }));\n        console.log(User);\n      }\n      else\n      {\n        dispatch(logout());\n      }\n    });\n  },[dispatch]);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {user?\n          <Switch>\n            <Route exact path='/'>\n              <HomePage/>\n            </Route>\n            <Route exact path=\"/profile\">\n              <MyProfile/>\n            </Route>\n            <Route>\n              <Error />\n            </Route>\n          </Switch>\n            :\n            <Login />\n        } \n        \n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}